name: Aliyun Image CI/CD

on:
  push:
    branches: [ "main" ]

jobs:
  ali-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          submodules: 'true'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: |
            image=moby/buildkit:master-rootless
          install: true

      - name: Login to Aliyun ACR
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.ALIYUN_REGISTRY }}
          username: ${{ secrets.ALIYUN_USERNAME }}
          password: ${{ secrets.ALIYUN_PASSWORD }}

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm
          push: true
          tags: |
            ${{ secrets.ALIYUN_REGISTRY }}/${{ secrets.ALIYUN_NAMESPACE }}/${{ secrets.ALIYUN_REPO_NAME }}:${{ github.sha }}
          labels: |
            maintainer=ci-system  # 添加标签用于清理
          cache-from: type=gha,scope=${{ github.ref_name }}
          cache-to: type=gha,mode=max,scope=${{ github.ref_name }}
          provenance: true  # 启用安全元数据


  service-run:
    needs: ali-build
    runs-on: ubuntu-latest
    timeout-minutes: 5  # 添加超时限制
    steps:
      - uses: actions/checkout@v4
      # 安全文件传输步骤
      - name: Secure File Transfer
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT || 22 }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "docker-compose.yaml"
          target: /tmp/
          strip_components: 1

      - name: SSH Deployment
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT || 22 }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # 创建应用目录（使用临时提权）
            sudo mkdir -p /opt/my-app

            # 原子化文件替换
            mv -f /tmp/docker-compose.yaml /opt/my-app/docker-compose.yaml
            cd /opt/my-app

            # 安全登录镜像仓库
            echo "${{ secrets.ALIYUN_PASSWORD }}" | docker login \
              --username "${{ secrets.ALIYUN_USERNAME }}" \
              --password-stdin "${{ secrets.ALIYUN_REGISTRY }}"

            # 部署命令
            docker-compose -f docker-compose.yaml pull
            docker-compose -f docker-compose.yaml up  \
              --force-recreate \
              --remove-orphans \
              --no-build

            # 安全清理（保留最近3个版本）
            docker image prune -af --filter "label=maintainer=ci-system" --filter "until=72h"